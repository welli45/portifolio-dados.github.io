<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Portifólio de Dados</title>
<link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/</link>
<atom:link href="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/index.xml" rel="self" type="application/rss+xml"/>
<description>O Python é uma linguagem de programação de alto nível utilizada em diferentes tipos de aplicações, como para o desenvolvimento web, em Machine Learning, no desenvolvimento de jogos e muito mais.[Fonte](https://blog.betrybe.com/python/)</description>
<image>
<url>https://welli45.github.io/portifolio-dados.github.io/images/profile.png</url>
<title>Portifólio de Dados</title>
<link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/</link>
</image>
<generator>quarto-1.6.35</generator>
<lastBuildDate>Thu, 12 Sep 2024 03:00:00 GMT</lastBuildDate>
<item>
  <title>Análise exploratória de dados</title>
  <dc:creator>Wellington Santos Souza</dc:creator>
  <link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas.html</link>
  <description><![CDATA[ 




<p><em>Este artigo foi reescrito em Domingo, 08 de Setembro de 2024.</em></p>
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/images/03.pandas/pandas.svg" class="img-fluid" data-fig-title="Pandas" alt="Pandas"></p>
<section id="introdução" class="level1">
<h1>Introdução</h1>
<p>O pandas é uma ferramenta de análise e manipulação de dados de código aberto rápida, poderosa, flexível e fácil de usar, desenvolvida com base na linguagem de programação Python. Clique <a href="https://pandas.pydata.org/docs/index.html">aqui!</a> para acessar a documentação oficial do Pandas.</p>
<p>Para instalar o Pandas, basta executar o comando: <code>pip install pandas</code> no terminal. Com o pandas instalado, podemos carrega-lo com o comando <code>import pandas as pd</code>. Vamos importar a biblioteca seaborn para plotar gráficos com o comando <code>import seaborn as sns</code>.</p>
<div id="865e0f9e" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span></code></pre></div>
</div>
<p>Agora que temos o pandas carregado podemos importar um arquivo CSV para análise. Além disso, podemos usar o pandas para coletar dados em diversos formatos, como JSON, HTML, SQL, Excel, entre outros. Para mais informações sobre como carregar dados com o pandas, clique <a href="https://pandas.pydata.org/pandas-docs/stable/reference/io.html">aqui!</a>.</p>
<div id="e2153c5a" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../dados/world_happiness.csv'</span>)</span></code></pre></div>
</div>
<section id="operações-básicas-com-o-pandas" class="level2">
<h2 class="anchored" data-anchor-id="operações-básicas-com-o-pandas">Operações básicas com o Pandas</h2>
<p>Podemos visualizar as primeiras linhas do nosso DataFrame com o comando <code>df.head()</code>. Para visualizar as últimas linhas, basta usar o comando <code>df.tail()</code>.</p>
<div id="1f1c7b5d" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando as primeiras linhas do DataFrame</span></span>
<span id="cb3-2">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Country name</th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">Life Ladder</th>
<th data-quarto-table-cell-role="th">Log GDP per capita</th>
<th data-quarto-table-cell-role="th">Social support</th>
<th data-quarto-table-cell-role="th">Healthy life expectancy at birth</th>
<th data-quarto-table-cell-role="th">Freedom to make life choices</th>
<th data-quarto-table-cell-role="th">Generosity</th>
<th data-quarto-table-cell-role="th">Perceptions of corruption</th>
<th data-quarto-table-cell-role="th">Positive affect</th>
<th data-quarto-table-cell-role="th">Negative affect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Afghanistan</td>
<td>2008</td>
<td>3.724</td>
<td>7.350</td>
<td>0.451</td>
<td>50.5</td>
<td>0.718</td>
<td>0.168</td>
<td>0.882</td>
<td>0.414</td>
<td>0.258</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Afghanistan</td>
<td>2009</td>
<td>4.402</td>
<td>7.509</td>
<td>0.552</td>
<td>50.8</td>
<td>0.679</td>
<td>0.191</td>
<td>0.850</td>
<td>0.481</td>
<td>0.237</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Afghanistan</td>
<td>2010</td>
<td>4.758</td>
<td>7.614</td>
<td>0.539</td>
<td>51.1</td>
<td>0.600</td>
<td>0.121</td>
<td>0.707</td>
<td>0.517</td>
<td>0.275</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Afghanistan</td>
<td>2011</td>
<td>3.832</td>
<td>7.581</td>
<td>0.521</td>
<td>51.4</td>
<td>0.496</td>
<td>0.164</td>
<td>0.731</td>
<td>0.480</td>
<td>0.267</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Afghanistan</td>
<td>2012</td>
<td>3.783</td>
<td>7.661</td>
<td>0.521</td>
<td>51.7</td>
<td>0.531</td>
<td>0.238</td>
<td>0.776</td>
<td>0.614</td>
<td>0.268</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="627e697d" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando as últimas linhas do DataFrame</span></span>
<span id="cb4-2">df.tail()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="4">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Country name</th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">Life Ladder</th>
<th data-quarto-table-cell-role="th">Log GDP per capita</th>
<th data-quarto-table-cell-role="th">Social support</th>
<th data-quarto-table-cell-role="th">Healthy life expectancy at birth</th>
<th data-quarto-table-cell-role="th">Freedom to make life choices</th>
<th data-quarto-table-cell-role="th">Generosity</th>
<th data-quarto-table-cell-role="th">Perceptions of corruption</th>
<th data-quarto-table-cell-role="th">Positive affect</th>
<th data-quarto-table-cell-role="th">Negative affect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">2194</td>
<td>Zimbabwe</td>
<td>2018</td>
<td>3.616</td>
<td>7.783</td>
<td>0.775</td>
<td>52.625</td>
<td>0.763</td>
<td>-0.051</td>
<td>0.844</td>
<td>0.658</td>
<td>0.212</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2195</td>
<td>Zimbabwe</td>
<td>2019</td>
<td>2.694</td>
<td>7.698</td>
<td>0.759</td>
<td>53.100</td>
<td>0.632</td>
<td>-0.047</td>
<td>0.831</td>
<td>0.658</td>
<td>0.235</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2196</td>
<td>Zimbabwe</td>
<td>2020</td>
<td>3.160</td>
<td>7.596</td>
<td>0.717</td>
<td>53.575</td>
<td>0.643</td>
<td>0.006</td>
<td>0.789</td>
<td>0.661</td>
<td>0.346</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2197</td>
<td>Zimbabwe</td>
<td>2021</td>
<td>3.155</td>
<td>7.657</td>
<td>0.685</td>
<td>54.050</td>
<td>0.668</td>
<td>-0.076</td>
<td>0.757</td>
<td>0.610</td>
<td>0.242</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2198</td>
<td>Zimbabwe</td>
<td>2022</td>
<td>3.296</td>
<td>7.670</td>
<td>0.666</td>
<td>54.525</td>
<td>0.652</td>
<td>-0.070</td>
<td>0.753</td>
<td>0.641</td>
<td>0.191</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>Podemos visualizar os índices e nome das colunas do DataFrame com os comandos <code>df.index</code> e <code>df.columns</code>, respectivamente.</p>
<div id="00fe002c" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando os índices do DataFrame</span></span>
<span id="cb5-2">df.index</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>RangeIndex(start=0, stop=2199, step=1)</code></pre>
</div>
</div>
<div id="15a62947" class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando os nomes das colunas do DataFrame</span></span>
<span id="cb7-2">df.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>Index(['Country name', 'year', 'Life Ladder', 'Log GDP per capita',
       'Social support', 'Healthy life expectancy at birth',
       'Freedom to make life choices', 'Generosity',
       'Perceptions of corruption', 'Positive affect', 'Negative affect'],
      dtype='object')</code></pre>
</div>
</div>
<p>Como vimos as colunas possuem espaços em seus nomes, para remover esses espaços podemos usar o comando <code>df.columns = df.columns.str.replace(' ', '_')</code>.</p>
<div id="ae82afe6" class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Removendo os espaços dos nomes das colunas</span></span>
<span id="cb9-2">df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.columns.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>)</span></code></pre></div>
</div>
<p>Além disso, podemos colocar os nomes das colunas em minúsculo.</p>
<div id="4c57b3b9" class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Colocando os nomes das colunas em minúsculo</span></span>
<span id="cb10-2">df.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.columns.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.lower()</span></code></pre></div>
</div>
<div id="82721449" class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando os nomes das colunas do DataFrame</span></span>
<span id="cb11-2">df.columns</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>Index(['country_name', 'year', 'life_ladder', 'log_gdp_per_capita',
       'social_support', 'healthy_life_expectancy_at_birth',
       'freedom_to_make_life_choices', 'generosity',
       'perceptions_of_corruption', 'positive_affect', 'negative_affect'],
      dtype='object')</code></pre>
</div>
</div>
<p>Podemos visualizar as informações do DataFrame com o comando <code>df.info()</code>. Além disso, podemos visualizar o tipo dos dados de cada coluna com o comando <code>df.dtypes</code>.</p>
<div id="7a0525cd" class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando as informações do DataFrame</span></span>
<span id="cb13-2">df.info()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 2199 entries, 0 to 2198
Data columns (total 11 columns):
 #   Column                            Non-Null Count  Dtype  
---  ------                            --------------  -----  
 0   country_name                      2199 non-null   object 
 1   year                              2199 non-null   int64  
 2   life_ladder                       2199 non-null   float64
 3   log_gdp_per_capita                2179 non-null   float64
 4   social_support                    2186 non-null   float64
 5   healthy_life_expectancy_at_birth  2145 non-null   float64
 6   freedom_to_make_life_choices      2166 non-null   float64
 7   generosity                        2126 non-null   float64
 8   perceptions_of_corruption         2083 non-null   float64
 9   positive_affect                   2175 non-null   float64
 10  negative_affect                   2183 non-null   float64
dtypes: float64(9), int64(1), object(1)
memory usage: 189.1+ KB</code></pre>
</div>
</div>
<div id="a360088d" class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualizando o tipo dos dados de cada coluna</span></span>
<span id="cb15-2">df.dtypes</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<pre><code>country_name                         object
year                                  int64
life_ladder                         float64
log_gdp_per_capita                  float64
social_support                      float64
healthy_life_expectancy_at_birth    float64
freedom_to_make_life_choices        float64
generosity                          float64
perceptions_of_corruption           float64
positive_affect                     float64
negative_affect                     float64
dtype: object</code></pre>
</div>
</div>
</section>
</section>
<section id="selecionando-linhas-e-colunas-do-dataframe" class="level1">
<h1>Selecionando linhas e colunas do DataFrame</h1>
<section id="selecionando-colunas-do-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="selecionando-colunas-do-dataframe">Selecionando colunas do DataFrame</h2>
<p>Podemos selecionar a coluna <code>life_ladder</code> do DataFrame com o comando <code>df.life_ladder</code>. Além disso, podemos selecionar mais de uma coluna passando uma lista com os nomes das colunas desejadas.</p>
<div id="0ce29595" class="cell" data-execution_count="12">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selecionando a coluna life_ladder</span></span>
<span id="cb17-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.life_ladder</span>
<span id="cb17-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0       3.724
1       4.402
2       4.758
3       3.832
4       3.783
        ...  
2194    3.616
2195    2.694
2196    3.160
2197    3.155
2198    3.296
Name: life_ladder, Length: 2199, dtype: float64</code></pre>
</div>
</div>
<p>Uma outra forma é passar o nome da coluna entre colchetes, como no exemplo abaixo.</p>
<div id="fedcb68c" class="cell" data-execution_count="13">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selecionando a coluna life_ladder</span></span>
<span id="cb19-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'life_ladder'</span>]</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>0       3.724
1       4.402
2       4.758
3       3.832
4       3.783
        ...  
2194    3.616
2195    2.694
2196    3.160
2197    3.155
2198    3.296
Name: life_ladder, Length: 2199, dtype: float64</code></pre>
</div>
</div>
</section>
<section id="selecionando-linhas-do-dataframe" class="level2">
<h2 class="anchored" data-anchor-id="selecionando-linhas-do-dataframe">Selecionando linhas do DataFrame</h2>
<p>Podemos selecionar as linhas de um DataFrame com o comando <code>df[1:5]</code>.</p>
<div id="9ee85dc7" class="cell" data-execution_count="14">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selecionando as linhas de 1 a 5</span></span>
<span id="cb21-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb21-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>  country_name  year  life_ladder  log_gdp_per_capita  social_support  \
1  Afghanistan  2009        4.402               7.509           0.552   
2  Afghanistan  2010        4.758               7.614           0.539   
3  Afghanistan  2011        3.832               7.581           0.521   
4  Afghanistan  2012        3.783               7.661           0.521   

   healthy_life_expectancy_at_birth  freedom_to_make_life_choices  generosity  \
1                              50.8                         0.679       0.191   
2                              51.1                         0.600       0.121   
3                              51.4                         0.496       0.164   
4                              51.7                         0.531       0.238   

   perceptions_of_corruption  positive_affect  negative_affect  
1                      0.850            0.481            0.237  
2                      0.707            0.517            0.275  
3                      0.731            0.480            0.267  
4                      0.776            0.614            0.268  </code></pre>
</div>
</div>
</section>
</section>
<section id="operadores-lógicos" class="level1">
<h1>Operadores lógicos</h1>
<p>Podemos usar operadores lógicos para selecionar linhas do DataFrame. Por exemplo, podemos selecionar as linhas onde o valor da coluna <code>year</code> é igual a 2018.</p>
<div id="ecb78f9e" class="cell" data-execution_count="15">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selecionando as linhas onde o valor da coluna year é igual a 2018</span></span>
<span id="cb23-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df.year <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018</span>]</span>
<span id="cb23-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>     country_name  year  life_ladder  log_gdp_per_capita  social_support  \
10    Afghanistan  2018        2.694               7.631           0.508   
24        Albania  2018        5.004               9.497           0.684   
35        Algeria  2018        5.043               9.370           0.799   
55      Argentina  2018        5.793              10.032           0.900   
72        Armenia  2018        5.062               9.490           0.814   
...           ...   ...          ...                 ...             ...   
2133    Venezuela  2018        5.006               5.935           0.887   
2150      Vietnam  2018        5.296               9.173           0.832   
2165        Yemen  2018        3.058               7.444           0.789   
2178       Zambia  2018        4.041               8.139           0.718   
2194     Zimbabwe  2018        3.616               7.783           0.775   

      healthy_life_expectancy_at_birth  freedom_to_make_life_choices  \
10                              53.575                         0.374   
24                              69.075                         0.824   
35                              66.300                         0.583   
55                              67.050                         0.846   
72                              66.825                         0.808   
...                                ...                           ...   
2133                            64.575                         0.611   
2150                            65.200                         0.909   
2165                            57.725                         0.553   
2178                            53.975                         0.791   
2194                            52.625                         0.763   

      generosity  perceptions_of_corruption  positive_affect  negative_affect  
10        -0.091                      0.928            0.385            0.405  
24         0.007                      0.899            0.592            0.319  
35        -0.151                      0.759            0.534            0.293  
55        -0.214                      0.855            0.732            0.321  
72        -0.169                      0.677            0.535            0.455  
...          ...                        ...              ...              ...  
2133       0.072                      0.828            0.723            0.374  
2150      -0.061                      0.808            0.614            0.191  
2165      -0.124                      0.793            0.409            0.315  
2178       0.048                      0.811            0.662            0.351  
2194      -0.051                      0.844            0.658            0.212  

[141 rows x 11 columns]</code></pre>
</div>
</div>
<p>Selecioando linhas onde life_ladder é maior que 5.</p>
<div id="f106804c" class="cell" data-execution_count="16">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selecionando as linhas onde o valor da coluna life_ladder é maior que 5</span></span>
<span id="cb25-2">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df.life_ladder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb25-3">x</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="16">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">country_name</th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">life_ladder</th>
<th data-quarto-table-cell-role="th">log_gdp_per_capita</th>
<th data-quarto-table-cell-role="th">social_support</th>
<th data-quarto-table-cell-role="th">healthy_life_expectancy_at_birth</th>
<th data-quarto-table-cell-role="th">freedom_to_make_life_choices</th>
<th data-quarto-table-cell-role="th">generosity</th>
<th data-quarto-table-cell-role="th">perceptions_of_corruption</th>
<th data-quarto-table-cell-role="th">positive_affect</th>
<th data-quarto-table-cell-role="th">negative_affect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">15</td>
<td>Albania</td>
<td>2009</td>
<td>5.485</td>
<td>9.241</td>
<td>0.833</td>
<td>67.320</td>
<td>0.525</td>
<td>-0.159</td>
<td>0.864</td>
<td>0.564</td>
<td>0.279</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">16</td>
<td>Albania</td>
<td>2010</td>
<td>5.269</td>
<td>9.283</td>
<td>0.733</td>
<td>67.600</td>
<td>0.569</td>
<td>-0.174</td>
<td>0.726</td>
<td>0.576</td>
<td>0.300</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">17</td>
<td>Albania</td>
<td>2011</td>
<td>5.867</td>
<td>9.311</td>
<td>0.759</td>
<td>67.880</td>
<td>0.487</td>
<td>-0.206</td>
<td>0.877</td>
<td>0.566</td>
<td>0.257</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">18</td>
<td>Albania</td>
<td>2012</td>
<td>5.510</td>
<td>9.326</td>
<td>0.785</td>
<td>68.160</td>
<td>0.602</td>
<td>-0.170</td>
<td>0.848</td>
<td>0.553</td>
<td>0.271</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">24</td>
<td>Albania</td>
<td>2018</td>
<td>5.004</td>
<td>9.497</td>
<td>0.684</td>
<td>69.075</td>
<td>0.824</td>
<td>0.007</td>
<td>0.899</td>
<td>0.592</td>
<td>0.319</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2153</td>
<td>Vietnam</td>
<td>2021</td>
<td>5.540</td>
<td>9.271</td>
<td>0.799</td>
<td>65.500</td>
<td>0.897</td>
<td>0.107</td>
<td>0.798</td>
<td>0.651</td>
<td>0.280</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2154</td>
<td>Vietnam</td>
<td>2022</td>
<td>6.267</td>
<td>9.333</td>
<td>0.879</td>
<td>65.600</td>
<td>0.975</td>
<td>-0.179</td>
<td>0.703</td>
<td>0.774</td>
<td>0.108</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2170</td>
<td>Zambia</td>
<td>2009</td>
<td>5.260</td>
<td>7.971</td>
<td>0.782</td>
<td>48.740</td>
<td>0.696</td>
<td>-0.097</td>
<td>0.917</td>
<td>0.693</td>
<td>0.123</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2172</td>
<td>Zambia</td>
<td>2012</td>
<td>5.013</td>
<td>8.094</td>
<td>0.780</td>
<td>50.720</td>
<td>0.788</td>
<td>0.007</td>
<td>0.806</td>
<td>0.676</td>
<td>0.250</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2173</td>
<td>Zambia</td>
<td>2013</td>
<td>5.244</td>
<td>8.111</td>
<td>0.761</td>
<td>51.380</td>
<td>0.770</td>
<td>-0.105</td>
<td>0.732</td>
<td>0.727</td>
<td>0.308</td>
</tr>
</tbody>
</table>

<p>1410 rows × 11 columns</p>
</div>
</div>
</div>
<p>Resetando o índice do DataFrame filtrado.</p>
<div id="79f80ba0" class="cell" data-execution_count="17">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2022</span>]</span>
<span id="cb26-2">new_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_df.reset_index(drop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb26-3">new_df</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="17">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">country_name</th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">life_ladder</th>
<th data-quarto-table-cell-role="th">log_gdp_per_capita</th>
<th data-quarto-table-cell-role="th">social_support</th>
<th data-quarto-table-cell-role="th">healthy_life_expectancy_at_birth</th>
<th data-quarto-table-cell-role="th">freedom_to_make_life_choices</th>
<th data-quarto-table-cell-role="th">generosity</th>
<th data-quarto-table-cell-role="th">perceptions_of_corruption</th>
<th data-quarto-table-cell-role="th">positive_affect</th>
<th data-quarto-table-cell-role="th">negative_affect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Afghanistan</td>
<td>2022</td>
<td>1.281</td>
<td>NaN</td>
<td>0.228</td>
<td>54.875</td>
<td>0.368</td>
<td>NaN</td>
<td>0.733</td>
<td>0.206</td>
<td>0.576</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Albania</td>
<td>2022</td>
<td>5.212</td>
<td>9.626</td>
<td>0.724</td>
<td>69.175</td>
<td>0.802</td>
<td>-0.066</td>
<td>0.846</td>
<td>0.547</td>
<td>0.255</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Argentina</td>
<td>2022</td>
<td>6.261</td>
<td>10.011</td>
<td>0.893</td>
<td>67.250</td>
<td>0.825</td>
<td>-0.128</td>
<td>0.810</td>
<td>0.724</td>
<td>0.284</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Armenia</td>
<td>2022</td>
<td>5.382</td>
<td>9.668</td>
<td>0.811</td>
<td>67.925</td>
<td>0.790</td>
<td>-0.154</td>
<td>0.705</td>
<td>0.531</td>
<td>0.549</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Australia</td>
<td>2022</td>
<td>7.035</td>
<td>10.854</td>
<td>0.942</td>
<td>71.125</td>
<td>0.854</td>
<td>0.153</td>
<td>0.545</td>
<td>0.711</td>
<td>0.244</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
<td>...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">109</td>
<td>Uruguay</td>
<td>2022</td>
<td>6.671</td>
<td>10.084</td>
<td>0.905</td>
<td>67.500</td>
<td>0.878</td>
<td>-0.052</td>
<td>0.631</td>
<td>0.775</td>
<td>0.267</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">110</td>
<td>Uzbekistan</td>
<td>2022</td>
<td>6.016</td>
<td>8.990</td>
<td>0.879</td>
<td>65.600</td>
<td>0.959</td>
<td>0.309</td>
<td>0.616</td>
<td>0.741</td>
<td>0.225</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">111</td>
<td>Venezuela</td>
<td>2022</td>
<td>5.949</td>
<td>NaN</td>
<td>0.899</td>
<td>63.875</td>
<td>0.770</td>
<td>NaN</td>
<td>0.798</td>
<td>0.754</td>
<td>0.292</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">112</td>
<td>Vietnam</td>
<td>2022</td>
<td>6.267</td>
<td>9.333</td>
<td>0.879</td>
<td>65.600</td>
<td>0.975</td>
<td>-0.179</td>
<td>0.703</td>
<td>0.774</td>
<td>0.108</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">113</td>
<td>Zimbabwe</td>
<td>2022</td>
<td>3.296</td>
<td>7.670</td>
<td>0.666</td>
<td>54.525</td>
<td>0.652</td>
<td>-0.070</td>
<td>0.753</td>
<td>0.641</td>
<td>0.191</td>
</tr>
</tbody>
</table>

<p>114 rows × 11 columns</p>
</div>
</div>
</div>
</section>
<section id="visualizando-dados-faltantes" class="level1">
<h1>Visualizando dados faltantes</h1>
<p>Podemos visualizar os dados faltantes do DataFrame com o comando <code>df.isnull().sum()</code>.</p>
<div id="ddee0b7c" class="cell" data-execution_count="18">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">df.isnull().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="18">
<pre><code>country_name                          0
year                                  0
life_ladder                           0
log_gdp_per_capita                   20
social_support                       13
healthy_life_expectancy_at_birth     54
freedom_to_make_life_choices         33
generosity                           73
perceptions_of_corruption           116
positive_affect                      24
negative_affect                      16
dtype: int64</code></pre>
</div>
</div>
</section>
<section id="estatísticas-descritivas" class="level1">
<h1>Estatísticas descritivas</h1>
<p>Podemos visualizar as estatísticas descritivas do DataFrame com o comando <code>df.describe()</code>.</p>
<div id="2b5a12c8" class="cell" data-execution_count="19">
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">df.describe()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="19">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">life_ladder</th>
<th data-quarto-table-cell-role="th">log_gdp_per_capita</th>
<th data-quarto-table-cell-role="th">social_support</th>
<th data-quarto-table-cell-role="th">healthy_life_expectancy_at_birth</th>
<th data-quarto-table-cell-role="th">freedom_to_make_life_choices</th>
<th data-quarto-table-cell-role="th">generosity</th>
<th data-quarto-table-cell-role="th">perceptions_of_corruption</th>
<th data-quarto-table-cell-role="th">positive_affect</th>
<th data-quarto-table-cell-role="th">negative_affect</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">count</td>
<td>2199.000000</td>
<td>2199.000000</td>
<td>2179.000000</td>
<td>2186.000000</td>
<td>2145.000000</td>
<td>2166.000000</td>
<td>2126.000000</td>
<td>2083.000000</td>
<td>2175.000000</td>
<td>2183.000000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">mean</td>
<td>2014.161437</td>
<td>5.479227</td>
<td>9.389760</td>
<td>0.810681</td>
<td>63.294582</td>
<td>0.747847</td>
<td>0.000091</td>
<td>0.745208</td>
<td>0.652148</td>
<td>0.271493</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">std</td>
<td>4.718736</td>
<td>1.125527</td>
<td>1.153402</td>
<td>0.120953</td>
<td>6.901104</td>
<td>0.140137</td>
<td>0.161079</td>
<td>0.185835</td>
<td>0.105913</td>
<td>0.086872</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">min</td>
<td>2005.000000</td>
<td>1.281000</td>
<td>5.527000</td>
<td>0.228000</td>
<td>6.720000</td>
<td>0.258000</td>
<td>-0.338000</td>
<td>0.035000</td>
<td>0.179000</td>
<td>0.083000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">25%</td>
<td>2010.000000</td>
<td>4.647000</td>
<td>8.500000</td>
<td>0.747000</td>
<td>59.120000</td>
<td>0.656250</td>
<td>-0.112000</td>
<td>0.688000</td>
<td>0.572000</td>
<td>0.208000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">50%</td>
<td>2014.000000</td>
<td>5.432000</td>
<td>9.499000</td>
<td>0.836000</td>
<td>65.050000</td>
<td>0.770000</td>
<td>-0.023000</td>
<td>0.800000</td>
<td>0.663000</td>
<td>0.261000</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">75%</td>
<td>2018.000000</td>
<td>6.309500</td>
<td>10.373500</td>
<td>0.905000</td>
<td>68.500000</td>
<td>0.859000</td>
<td>0.092000</td>
<td>0.869000</td>
<td>0.738000</td>
<td>0.323000</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">max</td>
<td>2022.000000</td>
<td>8.019000</td>
<td>11.664000</td>
<td>0.987000</td>
<td>74.475000</td>
<td>0.985000</td>
<td>0.703000</td>
<td>0.983000</td>
<td>0.884000</td>
<td>0.705000</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
</section>
<section id="plotando-gráficos" class="level1">
<h1>Plotando gráficos</h1>
<div id="af0e2c15" class="cell" data-execution_count="20">
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">df.plot()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-21-output-1.png" width="583" height="411" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Como pudemos notar a plotagem do gráfico não ficou muito legível. Podemos melhorar a visualização do gráfico. Para isso, vamos plotar um gráfico de dispersão com a coluna <code>log_gdp_per_capita</code> no eixo x e a coluna <code>life_ladder</code> no eixo y.</p>
<div id="92b30bcb" class="cell" data-execution_count="21">
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">df.plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scatter'</span>, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_gdp_per_capita'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'life_ladder'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-22-output-1.png" width="576" height="429" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Podemos melhorar a visualização do gráfico adicionando cores e alterando o tamanho dos pontos. Para isso, vamos criar um dicionário com as cores que queremos usar e passar esse dicionário para o parâmetro <code>c</code> do método <code>plot</code>.</p>
<div id="5760328b" class="cell" data-execution_count="22">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb32-2">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Brazil'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Green'</span>,</span>
<span id="cb32-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Slovenia'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Orange'</span>,</span>
<span id="cb32-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'India'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span></span>
<span id="cb32-5">}</span>
<span id="cb32-6"></span>
<span id="cb32-7">df.plot(</span>
<span id="cb32-8">    kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scatter'</span>,</span>
<span id="cb32-9">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_gdp_per_capita'</span>,</span>
<span id="cb32-10">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'life_ladder'</span>,</span>
<span id="cb32-11">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[cmap.get(c, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'yellow'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.country_name], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the colors</span></span>
<span id="cb32-12">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the size of the points</span></span>
<span id="cb32-13">    )</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-23-output-1.png" width="576" height="429" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Podemos plotar um histograma da coluna <code>life_ladder</code> com o comando <code>df.hist("life_ladder")</code>.</p>
<div id="046203ba" class="cell" data-execution_count="23">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">df.hist(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"life_ladder"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="23">
<pre><code>array([[&lt;Axes: title={'center': 'life_ladder'}&gt;]], dtype=object)</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-24-output-2.png" width="575" height="431" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Além disso podemos criar gráficos com o seaborn. Por exemplo, podemos criar um gráfico de dispersão com a coluna <code>log_gdp_per_capita</code> no eixo x e a coluna <code>life_ladder</code> no eixo y.</p>
<div id="7e54935b" class="cell" data-execution_count="24">
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">sns.scatterplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_gdp_per_capita'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'life_ladder'</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-25-output-1.png" width="576" height="429" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Podemos plotar vários gráficos ao mesmo tempo com o seaborn.</p>
<div id="f5176a7e" class="cell" data-execution_count="25">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">sns.pairplot(df)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas_files/figure-html/cell-26-output-1.png" width="2370" height="2359" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="operações-com-colunas" class="level1">
<h1>Operações com colunas</h1>
<p>Podemos criar uma nova coluna no DataFrame com o comando <code>df['nova_coluna'] = df['coluna1'] + df['coluna2']</code>.</p>
<div id="0d176217" class="cell" data-execution_count="26">
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'this_column_makes_no_sense'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"life_ladder"</span>]</span>
<span id="cb37-2">df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"net_affect_difference"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive_affect"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative_affect"</span>]</span>
<span id="cb37-3"></span>
<span id="cb37-4">df.head()</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="26">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">country_name</th>
<th data-quarto-table-cell-role="th">year</th>
<th data-quarto-table-cell-role="th">life_ladder</th>
<th data-quarto-table-cell-role="th">log_gdp_per_capita</th>
<th data-quarto-table-cell-role="th">social_support</th>
<th data-quarto-table-cell-role="th">healthy_life_expectancy_at_birth</th>
<th data-quarto-table-cell-role="th">freedom_to_make_life_choices</th>
<th data-quarto-table-cell-role="th">generosity</th>
<th data-quarto-table-cell-role="th">perceptions_of_corruption</th>
<th data-quarto-table-cell-role="th">positive_affect</th>
<th data-quarto-table-cell-role="th">negative_affect</th>
<th data-quarto-table-cell-role="th">this_column_makes_no_sense</th>
<th data-quarto-table-cell-role="th">net_affect_difference</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Afghanistan</td>
<td>2008</td>
<td>3.724</td>
<td>7.350</td>
<td>0.451</td>
<td>50.5</td>
<td>0.718</td>
<td>0.168</td>
<td>0.882</td>
<td>0.414</td>
<td>0.258</td>
<td>2011.724</td>
<td>0.156</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Afghanistan</td>
<td>2009</td>
<td>4.402</td>
<td>7.509</td>
<td>0.552</td>
<td>50.8</td>
<td>0.679</td>
<td>0.191</td>
<td>0.850</td>
<td>0.481</td>
<td>0.237</td>
<td>2013.402</td>
<td>0.244</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Afghanistan</td>
<td>2010</td>
<td>4.758</td>
<td>7.614</td>
<td>0.539</td>
<td>51.1</td>
<td>0.600</td>
<td>0.121</td>
<td>0.707</td>
<td>0.517</td>
<td>0.275</td>
<td>2014.758</td>
<td>0.242</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Afghanistan</td>
<td>2011</td>
<td>3.832</td>
<td>7.581</td>
<td>0.521</td>
<td>51.4</td>
<td>0.496</td>
<td>0.164</td>
<td>0.731</td>
<td>0.480</td>
<td>0.267</td>
<td>2014.832</td>
<td>0.213</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Afghanistan</td>
<td>2012</td>
<td>3.783</td>
<td>7.661</td>
<td>0.521</td>
<td>51.7</td>
<td>0.531</td>
<td>0.238</td>
<td>0.776</td>
<td>0.614</td>
<td>0.268</td>
<td>2015.783</td>
<td>0.346</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>Pandas</category>
  <category>Python</category>
  <guid>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/introducao-pandas.html</guid>
  <pubDate>Thu, 12 Sep 2024 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Derivadas usando Sympy e Numpy</title>
  <dc:creator>Wellington Santos Souza</dc:creator>
  <link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python.html</link>
  <description><![CDATA[ 




<p><em>Este artigo foi reescrito em Sexta, 23 de Agosto de 2024.</em></p>
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/images/02.calculo_python/derivadas.jpeg" class="img-fluid" data-fig-title="Derivadas Usando Python" alt="Python"></p>
<section id="funções-usando-python" class="level3">
<h3 class="anchored" data-anchor-id="funções-usando-python">Funções usando <code>Python</code></h3>
<p>Para instalar as bibliotecas necessárias, use o comando: <code>!pip install sympy numpy</code></p>
<p>Usaremos as bibliotecas <code>Sympy</code>, <code>Numpy</code> e <code>JAX</code></p>
<p><strong>Definição de uma função usando Python</strong></p>
<ul>
<li>Se quisermos definir a função <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20x%5E2"></li>
</ul>
<div id="046da099" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> f(x):</span>
<span id="cb1-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(f(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>9</code></pre>
</div>
</div>
<p>Podemos encontrar a derivada dessa função facilmente usando:</p>
<div id="472cc7e6" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dfdx(x):</span>
<span id="cb3-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(dfdx(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>6</code></pre>
</div>
</div>
<p>Além disso, podemos aplicar essa função e calcular a derivada para cada elemento de uma array criada com Numpy:</p>
<div id="4998152a" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># primeiro importamos a biblioteca</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># criamos o array</span></span>
<span id="cb5-4">x_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># calculamos x^2 para cada elemento do array </span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#e depois calculamos a derivada para cada elemento</span></span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, x_array)</span>
<span id="cb5-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f(x) = x**2: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, f(x_array))</span>
<span id="cb5-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) = 2x: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, dfdx(x_array))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>x: 
 [1 2 3]
f(x) = x**2: 
 [1 4 9]
f'(x) = 2x: 
 [2 4 6]</code></pre>
</div>
</div>
<p>Podemos também aplicar as funções f e dfdx para arrays maiores, além disso podemos plotar os gráficos de f e dfdx</p>
<div id="394d1b1b" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> plot_f1_and_f2(f1, f2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, x_min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, x_max<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, label1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f(x)"</span>, label2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x)"</span>):</span>
<span id="cb7-5">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(x_min, x_max,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"> </span>
<span id="cb7-8">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure()</span>
<span id="cb7-9">    ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-10">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>].set_position(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb7-11">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom'</span>].set_position(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zero'</span>)</span>
<span id="cb7-12">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>].set_color(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>)</span>
<span id="cb7-13">    ax.spines[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'top'</span>].set_color(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'none'</span>)</span>
<span id="cb7-14">    ax.xaxis.set_ticks_position(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom'</span>)</span>
<span id="cb7-15">    ax.yaxis.set_ticks_position(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb7-16"></span>
<span id="cb7-17">    plt.plot(x, f1(x), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label1)</span>
<span id="cb7-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> f2 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb7-19">             </span>
<span id="cb7-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(f2, np.ndarray):</span>
<span id="cb7-21">            plt.plot(x, f2, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo'</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label2,)</span>
<span id="cb7-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-23">            plt.plot(x, f2(x), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'b'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label2)</span>
<span id="cb7-24">    plt.legend()</span>
<span id="cb7-25"></span>
<span id="cb7-26">    plt.show()</span>
<span id="cb7-27">    </span>
<span id="cb7-28">plot_f1_and_f2(f, dfdx)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-5-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="derivadas-simbólicas" class="level2">
<h2 class="anchored" data-anchor-id="derivadas-simbólicas">Derivadas simbólicas</h2>
<p><strong>Computação simbólica</strong> lida com a computação de objetos matemáticos que são representados na forma exata, e não aproximadamente (por exemplo, <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B2%7D"> será escrito exatamente assim, e não como <img src="https://latex.codecogs.com/png.latex?1.41421356237">. Para a derivada, isso significa que o resultado será de certa forma semelhante ao que seria se você estivesse calculando derivadas manualmente usando regras (analiticamente). Assim, derivadas simbólicas podem produzir resultados exatos.</p>
<ul>
<li><p>Derivadas simbólicas em <code>Python</code> usando a biblioteca <code>SymPy</code>.</p></li>
<li><p>Podemos calcular o valor decimal aproximado de <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B18%7D"></p></li>
</ul>
<div id="24aaf960" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb8-2"></span>
<span id="cb8-3">math.sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="5">
<pre><code>4.242640687119285</code></pre>
</div>
</div>
<p><strong>Introdução à Computação Simbólica com <code>SymPy</code></strong></p>
<ul>
<li>O valor obtido é: <img src="https://latex.codecogs.com/png.latex?4.242640687119285"></li>
</ul>
<p>Agora se quisermos calcular: <img src="https://latex.codecogs.com/png.latex?%5Csqrt%7B18%7D%20=%20%5Csqrt%7B9%20%5Ccdot%202%7D%20=%203%5Csqrt%7B2%7D"></p>
<div id="61789412" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Esse formato de importação de módulo permite</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># usar as funções sympy sem o prefixo sympy.</span></span>
<span id="cb10-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Na verdade, essa é a função sympy.sqrt,</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mas o prefixo sympy. foi omitido.</span></span>
<span id="cb10-7">sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="6">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%203%20%5Csqrt%7B2%7D"></p>
</div>
</div>
<p>Para obtermos o valor aproximado fazemos</p>
<div id="41dba85c" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">N(sqrt(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="7">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%204.24264068711928"></p>
</div>
</div>
<p>No SymPy, as variáveis são definidas usando símbolos. Nesta biblioteca específica, elas precisam ser pré-definidas (uma lista delas deve ser fornecida). Veja na célula abaixo como a expressão simbólica, correspondente à expressão matemática <img src="https://latex.codecogs.com/png.latex?2x%5E2%20-%20xy">, é definida:</p>
<div id="e035e109" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Lista de símboos</span></span>
<span id="cb12-2">x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> symbols(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x y'</span>)</span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Definição da expressão.</span></span>
<span id="cb12-4">expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y</span>
<span id="cb12-5">expr</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="8">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%202%20x%5E%7B2%7D%20-%20x%20y"></p>
</div>
</div>
<p>Pode realizar várias manipulações com essa expressão: adicionar ou subtrair alguns termos, multiplicar por outras expressões, etc., assim como se estivesse fazendo isso manualmente:</p>
<div id="862bea19" class="cell" data-execution_count="9">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">expr_manip <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (expr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb13-2">expr_manip</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="9">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20x%20%5Cleft(x%5E%7B3%7D%20+%202%20x%5E%7B2%7D%5Cright)"></p>
</div>
</div>
<p>Agora, vamos calcular a derivada da expressão <img src="https://latex.codecogs.com/png.latex?2x%5E2%20-%20xy"> em relação a <img src="https://latex.codecogs.com/png.latex?x">:</p>
<div id="0c92765c" class="cell" data-execution_count="10">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Derivada da expressão em relação a x.</span></span>
<span id="cb14-2">diff(expr, x)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="10">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%204%20x%20-%20y"></p>
</div>
</div>
<p>Podemos expandir a função expr_manipulada para obter a expressão completa:</p>
<div id="df759f71" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">expand(expr_manip)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="11">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20x%5E%7B4%7D%20+%202%20x%5E%7B3%7D"></p>
</div>
</div>
<p>Podemos também simplificar a expressão:</p>
<div id="355e0fc7" class="cell" data-execution_count="12">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">simplify(expr_manip)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="12">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20x%5E%7B3%7D%20%5Cleft(x%20+%202%5Cright)"></p>
</div>
</div>
<p>Também podemos fatorear a expressão:</p>
<div id="a09db36f" class="cell" data-execution_count="13">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">factor(expr_manip)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="13">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20x%5E%7B3%7D%20%5Cleft(x%20+%202%5Cright)"></p>
</div>
</div>
<p>Podemos também resolver equações simbolicamente:</p>
<div id="3f86a384" class="cell" data-execution_count="14">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resolvendo a equação x^2 - 1 = 0.</span></span>
<span id="cb18-2">solve(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="14">
<pre><code>[-1, 1]</code></pre>
</div>
</div>
<p>Podemos substituir valores específicos para as variáveis na expressão</p>
<div id="c178eb56" class="cell" data-execution_count="15">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">expr.evalf(subs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{x:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, y:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="15">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%204.0"></p>
</div>
</div>
<p>Isso pode ser usado para avaliar uma função <img src="https://latex.codecogs.com/png.latex?f%5Cleft(x%5Cright)%20=%20x%5E2">:</p>
<div id="27614811" class="cell" data-execution_count="16">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">f_symb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb21-2">f_symb.evalf(subs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{x:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="16">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%209.0"></p>
</div>
</div>
<p>Podemos avaliar uma função simbólica para cada elemento de uma matriz:</p>
<div id="0807eca1" class="cell" data-execution_count="17">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Definindo uma matriz simbólica.</span></span>
<span id="cb22-2"></span>
<span id="cb22-3">x_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])</span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb22-6">    f_symb(x_array)</span>
<span id="cb22-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">TypeError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> err:</span>
<span id="cb22-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(err)</span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convertendo a função simbólica em uma função numpy.</span></span>
<span id="cb22-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sympy.utilities.lambdify <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> lambdify</span>
<span id="cb22-11"></span>
<span id="cb22-12">f_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, f_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb22-13"></span>
<span id="cb22-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, x_array)</span>
<span id="cb22-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f(x) = x**2: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, f_symb_numpy(x_array))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>'Pow' object is not callable
x: 
 [1 2 3]
f(x) = x**2: 
 [1 4 9]</code></pre>
</div>
</div>
</section>
<section id="derivadas-simbólicas-com-sympy" class="level2">
<h2 class="anchored" data-anchor-id="derivadas-simbólicas-com-sympy">Derivadas Simbólicas com <code>SymPy</code></h2>
<p>Se quisermos calcular a derivada da função <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20x%5E2"> simbolicamente, podemos fazer isso com o <code>SymPy</code>:</p>
<div id="91681e04" class="cell" data-execution_count="18">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Definindo a função simbólica.</span></span>
<span id="cb24-2">f_symb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculando a derivada da função simbólica.</span></span>
<span id="cb24-4">dfdx_symb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff(f_symb, x)</span>
<span id="cb24-5">dfdx_symb</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="18">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%202%20x"></p>
</div>
</div>
<p>O Sympy aplica todas as regras de derivação para obter a derivada da função <img src="https://latex.codecogs.com/png.latex?(exp(-2x)%20+%203sin(3x),%20x)">:</p>
<div id="84808f4b" class="cell" data-execution_count="19">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">f_symb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x)</span>
<span id="cb25-2">dfdx_symb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff(f_symb, x)</span>
<span id="cb25-3">f_symb, dfdx_symb</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="19">
<pre><code>(3*sin(3*x) + exp(-2*x), 9*cos(3*x) - 2*exp(-2*x))</code></pre>
</div>
</div>
<p>Agora vamos plotar a função e sua derivada:</p>
<div id="ea012dda" class="cell" data-execution_count="20">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">f_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, f_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb27-2">dfdx_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, dfdx_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb27-3"></span>
<span id="cb27-4">plot_f1_and_f2(f_symb_numpy, dfdx_symb_numpy)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-21-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Agora vamos calcular a derivada da função <img src="https://latex.codecogs.com/png.latex?f(x)%20=%202x"> simbolicamente:</p>
<div id="2efa92dc" class="cell" data-execution_count="21">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">f_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, f_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb28-2"></span>
<span id="cb28-3">dfdx_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, dfdx_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb28-4"></span>
<span id="cb28-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, x_array)</span>
<span id="cb28-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) = 2x: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, dfdx_symb_numpy(x_array))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>x: 
 [1 2 3]
f'(x) = 2x: 
 [-9.18060304  8.6049013  -8.20512986]</code></pre>
</div>
</div>
<p>Agora vamos plotar a função e sua derivada:</p>
<div id="1e46d8fd" class="cell" data-execution_count="22">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plote a função e sua derivada</span></span>
<span id="cb30-2">plot_f1_and_f2(f_symb_numpy, dfdx_symb_numpy)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-23-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="limitações-da-derivada-simbólica" class="level2">
<h2 class="anchored" data-anchor-id="limitações-da-derivada-simbólica">Limitações da derivada simbólica</h2>
<ul>
<li>Às vezes, as expressões de saída são muito complicadas e até mesmo impossíveis de serem avaliadas. Por exemplo, encontrar a derivada da função.</li>
</ul>
<p><img src="https://latex.codecogs.com/png.latex?%5Cleft%7Cx%5Cright%7C%20=%20%5Cbegin%7Bcases%7D%20x,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20%3E%200%5C%5C%20%20-x,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20%3C%200%20%5C%5C%200,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20=%200%5Cend%7Bcases%7D"> Analiticamente, anderivada é: <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bd%7D%7Bdx%7D%5Cleft(%5Cleft%7Cx%5Cright%7C%5Cright)%20=%20%5Cbegin%7Bcases%7D%201,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20%3E%200%5C%5C%20%20-1,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20%3C%200%5C%5C%5C%20%5Ctext%7Bdoes%20not%20exist%7D,%20%5C%20%5Ctext%7Bif%7D%5C%20x%20=%200%5Cend%7Bcases%7D"> Podemos calcular a derivada da função <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20%5Cleft%7Cx%5Cright%7C"> simbolicamente:</p>
<div id="0e99fc50" class="cell" data-execution_count="23">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">dfdx_abs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(x),x)</span>
<span id="cb31-2">dfdx_abs</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="23">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20%5Cfrac%7B%5Cleft(%5Coperatorname%7Bre%7D%7B%5Cleft(x%5Cright)%7D%20%5Cfrac%7Bd%7D%7Bd%20x%7D%20%5Coperatorname%7Bre%7D%7B%5Cleft(x%5Cright)%7D%20+%20%5Coperatorname%7Bim%7D%7B%5Cleft(x%5Cright)%7D%20%5Cfrac%7Bd%7D%7Bd%20x%7D%20%5Coperatorname%7Bim%7D%7B%5Cleft(x%5Cright)%7D%5Cright)%20%5Coperatorname%7Bsign%7D%7B%5Cleft(x%20%5Cright)%7D%7D%7Bx%7D"></p>
</div>
</div>
<p>Outro exemplo <img src="https://latex.codecogs.com/png.latex?x=-2">:</p>
<div id="67a99c0c" class="cell" data-execution_count="24">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">dfdx_abs.evalf(subs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{x:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display cell-output-markdown" data-execution_count="24">
<p><img src="https://latex.codecogs.com/png.latex?%5Cdisplaystyle%20-%20%5Cleft.%20%5Cfrac%7Bd%7D%7Bd%20x%7D%20%5Coperatorname%7Bre%7D%7B%5Cleft(x%5Cright)%7D%20%5Cright%7C_%7B%5Csubstack%7B%20x=-2%20%7D%7D"></p>
</div>
</div>
<p>De fato, há problemas com a avaliação das expressões simbólicas sempre que há um “salto” na derivada (por exemplo, as expressões da função são diferentes para diferentes intervalos de <img src="https://latex.codecogs.com/png.latex?x">), como acontece com <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7Bd%7D%7Bdx%7D(%7Cx%7C)">.</p>
<p>Além disso, você pode ver neste exemplo que é possível obter uma função muito complicada como resultado da computação simbólica. Isso é chamado de aumento de expressão, que resulta em cálculos não suficientemente lentos.</p>
</section>
<section id="derivadas-numéricas" class="level1">
<h1>Derivadas Numéricas</h1>
<p><strong>Derivadas Numéricas</strong> são calculadas numericamente, ou seja, aproximadamente. Isso significa que a derivada é calculada para um valor específico de <img src="https://latex.codecogs.com/png.latex?x"> e é uma aproximação do valor real da derivada. A precisão da derivada numérica depende do valor de <img src="https://latex.codecogs.com/png.latex?h"> (o passo de Derivada). Quanto menor o valor de <img src="https://latex.codecogs.com/png.latex?h">, mais precisa será a derivada, mas também mais lenta será a computação.</p>
<section id="derivadas-numéricas-em-python-usando-a-biblioteca-numpy." class="level4">
<h4 class="anchored" data-anchor-id="derivadas-numéricas-em-python-usando-a-biblioteca-numpy.">Derivadas numéricas em <code>Python</code> usando a biblioteca <code>NumPy</code>.</h4>
<div id="4a370314" class="cell" data-execution_count="25">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">x_array_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb33-2">dfdx_numerical <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.gradient(f(x_array_2), x_array_2)</span>
<span id="cb33-3"></span>
<span id="cb33-4">plot_f1_and_f2(dfdx_symb_numpy, dfdx_numerical, label1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) exact"</span>, label2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) approximate"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-26-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="3771e6b0" class="cell" data-execution_count="26">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">dfdx_composed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> diff(exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x), x)</span>
<span id="cb34-2">dfdx_symb_numpy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lambdify(x, dfdx_symb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>)</span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plote a função e sua derivada</span></span>
<span id="cb34-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> f_composed(x):</span>
<span id="cb34-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.exp(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>x)</span>
<span id="cb34-6"></span>
<span id="cb34-7">plot_f1_and_f2(lambdify(x, dfdx_composed, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'numpy'</span>), np.gradient(f_composed(x_array_2), x_array_2),</span>
<span id="cb34-8">              label1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) exact"</span>, label2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f'(x) approximate"</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-27-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Obviamente, a primeira desvantagem da Derivada numérica é que ela não é exata. No entanto, sua precisão normalmente é suficiente para aplicativos de aprendizado de máquina. Nesse estágio, não há necessidade de avaliar os erros da Derivada numérica.</p>
<p>Outro problema é semelhante ao que apareceu na Derivada simbólica: ela é imprecisa nos pontos em que há “saltos” da derivada. Vamos comparar a derivada exata da função de valor absoluto e a aproximação numérica:</p>
<div id="4620d973" class="cell" data-execution_count="27">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dfdx_abs(x):</span>
<span id="cb35-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb35-3">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb35-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb35-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb35-6">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb35-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb35-8">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb35-9"></span>
<span id="cb35-10">plot_f1_and_f2(np.vectorize(dfdx_abs), np.gradient(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(x_array_2), x_array_2))</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python_files/figure-html/cell-28-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>


<!-- -->

</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>Derivadas</category>
  <category>Python</category>
  <guid>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/Derivadas-Python.html</guid>
  <pubDate>Fri, 23 Aug 2024 03:00:00 GMT</pubDate>
</item>
<item>
  <title>Otimização usando Gradient Descent em duas variáveis usando Python</title>
  <dc:creator>Wellington Santos Souza</dc:creator>
  <link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables.html</link>
  <description><![CDATA[ 




<p>Método de <strong>Gradient Descent</strong> otimizando algumas funções em duas variáveis.</p>
<p>Vamos carregar os pacotes que utilizaremos aqui:</p>
<div id="2f029156" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> w2_tools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (plot_f_cont_and_surf, gradient_descent_two_variables, </span>
<span id="cb1-4">                      f_example_3, dfdx_example_3, dfdy_example_3, </span>
<span id="cb1-5">                      f_example_4, dfdx_example_4, dfdy_example_4)</span></code></pre></div>
</details>
</div>
<p>Agora vamos explorar um exemplo simples de uma função em duas variáveis <img src="https://latex.codecogs.com/png.latex?f(x,y)"> com um mínimo global.</p>
<div id="ba1ddf23" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">plot_f_cont_and_surf([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>], f_example_3, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>, view<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'azim'</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elev'</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="2">
<pre><code>(&lt;Figure size 960x480 with 2 Axes&gt;,
 &lt;Axes: xlabel='$x$', ylabel='$y$'&gt;,
 &lt;Axes3D: xlabel='$x$', ylabel='$y$', zlabel='$f$'&gt;)</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables_files/figure-html/cell-3-output-2.png" width="817" height="403" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Para encontrarmos o mínimo, você podemos implementar a <strong>gradient descent</strong> a partir do ponto inicial <img src="https://latex.codecogs.com/png.latex?(x_0,y_0)"> e realizar etapas iteração por iteração usando as seguintes equações:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_1%20=%20x_0%20-%20%5Calpha%20%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20x%7D(x_0,%20y_0),%0A"></p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ay_1%20=%20y_0%20-%20%5Calpha%20%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20y%7D(x_0,%20y_0),%5Ctag%7B1%7D%0A"></p>
<p>em que <img src="https://latex.codecogs.com/png.latex?%5Calpha%3E0"> é uma taxa de aprendizado. O número de iterações também é um parâmetro. O método é implementado com o seguinte código:</p>
<div id="08ae7431" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gradient_descent(dfdx, dfdy, x, y, learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> iteration <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_iterations):</span>
<span id="cb4-3">        x, y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dfdx(x, y), y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dfdy(x, y)</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x, y</span></code></pre></div>
</details>
</div>
<p>Agora, para otimizar a função, configuramos os parâmetros <code>num_iterations</code>, <code>learning_rate</code>, <code>x_initial</code>, <code>y_initial</code> e executar o <strong>gradient descent</strong>:</p>
<div id="0b8ff1de" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gradient descent result: x_min, y_min ="</span>, </span>
<span id="cb5-3">      gradient_descent(dfdx_example_3, dfdy_example_3, x_initial, y_initial, learning_rate, num_iterations)) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Gradient descent result: x_min, y_min = (4.0, 4.0)</code></pre>
</div>
</div>
<p>Pode ver a visualização executando o código a seguir. Observe que a descida de gradiente em duas variáveis executa etapas no plano, em uma direção oposta ao vetor de gradiente <img src="https://latex.codecogs.com/png.latex?%5Cbegin%7Bbmatrix%7D%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20x%7D(x_0,%20y_0)%20%5C%5C%20%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20y%7D(x_0,%20y_0)%5Cend%7Bbmatrix%7D"> com a taxa de aprendizado <img src="https://latex.codecogs.com/png.latex?%5Calpha"> como um fator de escala.</p>
<div id="298747ce" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb7-2">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb7-3">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.6</span></span>
<span id="cb7-4">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.6</span></span>
<span id="cb7-5"></span>
<span id="cb7-6">gd_example_3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gradient_descent_two_variables([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">74</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">85</span>], </span>
<span id="cb7-7">                                              f_example_3, dfdx_example_3, dfdy_example_3, </span>
<span id="cb7-8">                                              gradient_descent, num_iterations, learning_rate, </span>
<span id="cb7-9">                                              x_initial, y_initial, </span>
<span id="cb7-10">                                              [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">81.5</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">171</span>], </span>
<span id="cb7-11">                                              cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>, view<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'azim'</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elev'</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">28</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables_files/figure-html/cell-6-output-1.png" width="817" height="403" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Vamos dar uma olhada nessa outra função</p>
<div id="e269b0ef" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plot_f_cont_and_surf([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span>], f_example_4, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'terrain'</span>, view<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'azim'</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elev'</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="6">
<pre><code>(&lt;Figure size 960x480 with 2 Axes&gt;,
 &lt;Axes: xlabel='$x$', ylabel='$y$'&gt;,
 &lt;Axes3D: xlabel='$x$', ylabel='$y$', zlabel='$f$'&gt;)</code></pre>
</div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables_files/figure-html/cell-7-output-2.png" width="815" height="403" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Podemos encontrar o mínimo global com:</p>
<div id="388a488a" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gradient descent result: x_min, y_min ="</span>, </span>
<span id="cb10-4">      gradient_descent(dfdx_example_4, dfdy_example_4, x_initial, y_initial, learning_rate, num_iterations)) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Gradient descent result: x_min, y_min = (0.5230322579358745, 0.5169891562802605)</code></pre>
</div>
</div>
<p>Visualizando</p>
<div id="f2b480c2" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Converges to the global minimum point.</span></span>
<span id="cb12-2">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> y_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Converges to a local minimum point.</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num_iterations = 20; learning_rate = 0.2; x_initial = 2; y_initial = 3</span></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Converges to another local minimum point.</span></span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># num_iterations = 20; learning_rate = 0.2; x_initial = 4; y_initial = 0.5</span></span>
<span id="cb12-7"></span>
<span id="cb12-8">gd_example_4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gradient_descent_two_variables([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span>], </span>
<span id="cb12-9">                                              f_example_4, dfdx_example_4, dfdy_example_4, </span>
<span id="cb12-10">                                              gradient_descent, num_iterations, learning_rate, </span>
<span id="cb12-11">                                              x_initial, y_initial, </span>
<span id="cb12-12">                                              [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>], <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span>], </span>
<span id="cb12-13">                                              cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'terrain'</span>, view<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'azim'</span>:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">63</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elev'</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>})</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables_files/figure-html/cell-9-output-1.png" width="815" height="403" class="figure-img"></p>
</figure>
</div>
</div>
</div>


<!-- -->


<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>curso</category>
  <category>coursera</category>
  <category>Algebra Linear</category>
  <category>calculo</category>
  <category>Machine Learning</category>
  <category>Data Science</category>
  <category>Deep Learning</category>
  <category>Python</category>
  <category>R</category>
  <category>Algebra Linear</category>
  <guid>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradien-descent-2-variables.html</guid>
  <pubDate>Sun, 04 Aug 2024 03:00:00 GMT</pubDate>
  <media:content url="https://welli45.github.io/portifolio-dados.github.io/Vida-Academica/images/calculo/07-gradiente-descida.png" medium="image" type="image/png" height="118" width="144"/>
</item>
<item>
  <title>Otimização usando Gradient Descent em uma variável Usando Python</title>
  <dc:creator>Wellington Santos Souza</dc:creator>
  <link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent.html</link>
  <description><![CDATA[ 




<p><img src="https://welli45.github.io/portifolio-dados.github.io/Vida-Academica/images/calculo/07-gradiente-descida.png" class="img-fluid" data-fig-title="Capa" alt="Capa"> Para entendermos como otimizar funções usando <strong>Gradient Descent,</strong> vamos começar com uma exemplo simples: funções de uma única variável.</p>
<p>Para isso vamos utilizar os pacotes <code>numpy</code> e <code>matplotlib</code>.</p>
<div id="692f17f3" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> w2_tools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plot_f, gradient_descent_one_variable, f_example_2, dfdx_example_2</span></code></pre></div>
</details>
</div>
<p>A função <img src="https://latex.codecogs.com/png.latex?f(x)%20=%20e%5Ex%20-%20log(x)"> (definida para <img src="https://latex.codecogs.com/png.latex?x%3E0">) é uma função de uma variável que tem apenas um ponto mínimo (chamado de mínimo global). No entanto, às vezes esse ponto mínimo não pode ser encontrado analiticamente - resolvendo a derivada dessa equação <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdf%7D%7Bdx%7D=0">. Isso pode ser feito usando um método de <strong>Gradient Descent</strong>.</p>
<p>Para implementar a <strong>Gradient Descent</strong>, você precisa partir de algum ponto inicial <img src="https://latex.codecogs.com/png.latex?x_0">. Com o objetivo de encontrar um ponto em que a derivada seja igual a zero, você deseja “descer na curva”. Calcule a derivada <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdf%7D%7Bdx%7D(x)"> (chamado de gradiente) e avance para o próximo ponto usando a expressão:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0Ax_1%20=%20x_0%20-%20%5Calpha%20%5Cfrac%7Bdf%7D%7Bdx%7D(x_0),%5Ctag%7B1%7D%0A"></p>
<p>em que <img src="https://latex.codecogs.com/png.latex?a%3E0"> é um parâmetro chamado de <strong>taxa de aprendizado</strong>. Repita o processo iterativamente. O número de iterações <img src="https://latex.codecogs.com/png.latex?n"> geralmente também é um parâmetro.</p>
<p>Subtraindo <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdf%7D%7Bdx%7D(x_0)"> você desce a na curva contra o aumento da função - em direção ao ponto mínimo. Portanto, <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdf%7D%7Bdx%7D(x_0)"> geralmente define a direção do movimento. O parâmetro <img src="https://latex.codecogs.com/png.latex?a"> serve como um fator de escala.</p>
<p>Agora é hora de implementar o método de <strong>Gradient Descent</strong> e fazer experimentos com os parâmetros!</p>
<p>Primeiro, defina a função <img src="https://latex.codecogs.com/png.latex?f(x)=e%5E2-log(x)"> e sua derivada <img src="https://latex.codecogs.com/png.latex?%5Cdfrac%7Bdf%7D%7Bdx%7D=e%5Ex-%5Cdfrac%7B1%7D%7Bx%7D">:</p>
<div id="73b434de" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> f_example_1(x):</span>
<span id="cb2-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.exp(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.log(x)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> dfdx_example_1(x):</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.exp(x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>x</span></code></pre></div>
</details>
</div>
<p>A função <img src="https://latex.codecogs.com/png.latex?f(x)"> tem um mínimo global. Vamos traçar o gráfico da função:</p>
<div id="74965b9e" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">plot_f([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>], f_example_1, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent_files/figure-html/cell-4-output-1.png" width="670" height="349" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>O Gradient Descent pode ser implementado da seguinte forma:</p>
<div id="282d628f" class="cell" data-execution_count="4">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> gradient_descent(dfdx, x, learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>):</span>
<span id="cb4-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> iteration <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_iterations):</span>
<span id="cb4-3">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dfdx(x)</span>
<span id="cb4-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x</span></code></pre></div>
</details>
</div>
<p>Observe que há três parâmetros nessa implementação: num_iterations, learning_rate, ponto inicial x_initial. Para otimizar a função, configure os parâmetros e chame a função definida gradient_descent:</p>
<div id="4693c84a" class="cell" data-execution_count="5">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gradient descent result: x_min ="</span>, gradient_descent(dfdx_example_1, x_initial, learning_rate, num_iterations)) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Gradient descent result: x_min = 0.5671434156768685</code></pre>
</div>
</div>
<p>O código na célula a seguir o ajudará a visualizar e entender melhor o método de descida de gradiente.</p>
<div id="c1878eeb" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb7-2">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb7-3">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb7-4">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb7-5">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.04</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.6</span></span>
<span id="cb7-6">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb7-7">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.03</span></span>
<span id="cb7-8">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span></span>
<span id="cb7-9"></span>
<span id="cb7-10">gd_example_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gradient_descent_one_variable([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">13</span>], f_example_1, dfdx_example_1, </span>
<span id="cb7-11">                                   gradient_descent, num_iterations, learning_rate, x_initial, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9.5</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent_files/figure-html/cell-7-output-1.png" width="670" height="349" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<section id="função-com-vários-mínimos" class="level3">
<h3 class="anchored" data-anchor-id="função-com-vários-mínimos">Função com vários mínimos</h3>
<p>Plotando a função</p>
<div id="c8422a2a" class="cell" data-execution_count="7">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">plot_f([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], f_example_2, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent_files/figure-html/cell-8-output-1.png" width="677" height="348" class="figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Rodando o gradient descent</p>
<div id="a5273098" class="cell" data-execution_count="8">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gradient descent results"</span>)</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Global minimum: x_min ="</span>, gradient_descent(dfdx_example_2, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span>, num_iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span>
<span id="cb9-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Local minimum: x_min ="</span>, gradient_descent(dfdx_example_2, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, learning_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span>, num_iterations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span>)) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Gradient descent results
Global minimum: x_min = 1.7751686214270586
Local minimum: x_min = 0.7585728671820583</code></pre>
</div>
</div>
<p>Testando diferentes pontos:</p>
<div id="29df09a0" class="cell" data-execution_count="9">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span></span>
<span id="cb11-2">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.005</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span></span>
<span id="cb11-3">num_iterations <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">35</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> learning_rate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> x_initial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span></span>
<span id="cb11-4"></span>
<span id="cb11-5">gd_example_2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gradient_descent_one_variable([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], f_example_2, dfdx_example_2, </span>
<span id="cb11-6">                                      gradient_descent, num_iterations, learning_rate, x_initial, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>])</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent_files/figure-html/cell-10-output-1.png" width="677" height="348" class="figure-img"></p>
</figure>
</div>
</div>
</div>


<!-- -->

</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>curso</category>
  <category>coursera</category>
  <category>Algebra Linear</category>
  <category>calculo</category>
  <category>Machine Learning</category>
  <category>Data Science</category>
  <category>Deep Learning</category>
  <category>Python</category>
  <category>R</category>
  <category>Algebra Linear</category>
  <guid>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/gradiente-descent.html</guid>
  <pubDate>Sun, 04 Aug 2024 03:00:00 GMT</pubDate>
  <media:content url="https://welli45.github.io/portifolio-dados.github.io/Vida-Academica/images/calculo/07-gradiente-descida.png" medium="image" type="image/png" height="118" width="144"/>
</item>
<item>
  <title>COLETANDO DADOS DO SIDRA COM O PYTHON</title>
  <dc:creator>Wellington Santos Souza</dc:creator>
  <link>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/projeto-sidrapy.html</link>
  <description><![CDATA[ 




<p><em>Este artigo foi reescrito em Segunda, 25 de Março de 2024.</em></p>
<p><img src="https://welli45.github.io/portifolio-dados.github.io/projetos-Python/images/01.sidrar/sidra.png" class="img-fluid" data-fig-title="Acessando dados disponíveis no SIDRA IBGE com o pacote sidrar" alt="SIDRAr"></p>
<p>COLETANDO DADOS DO SIDRA COM O PYTHON</p>
<p>O primeiro passo será instalar a biblioteca sidrapy, se estiver usando o VSCode pode digitar o código <code>pip install sidrapy</code> no termianl que você irá instalar a biblioteca usada para fazer o download dos dados.</p>
<p>O segundo passo será importar essa biblioteca para isso faça;</p>
<div id="956e1315" class="cell" data-message="false" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sidrapy</span></code></pre></div>
</details>
</div>
<p>Agora que temos nossa biblioteca instalada vamos baixar nossos dados.</p>
<div id="b9651e7f" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Importa os dados do SIDRA</span></span>
<span id="cb2-2">pib_sa_raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sidrapy.get_table(table_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1621"</span>,</span>
<span id="cb2-3">                            territorial_level <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1"</span>,</span>
<span id="cb2-4">                            ibge_territorial_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>,</span>
<span id="cb2-5">                            period <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"all"</span>,</span>
<span id="cb2-6">                            classification <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11255/90707"</span>)</span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Checamos a importação</span></span>
<span id="cb2-9">pib_sa_raw.head()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="2">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">NC</th>
<th data-quarto-table-cell-role="th">NN</th>
<th data-quarto-table-cell-role="th">MC</th>
<th data-quarto-table-cell-role="th">MN</th>
<th data-quarto-table-cell-role="th">V</th>
<th data-quarto-table-cell-role="th">D1C</th>
<th data-quarto-table-cell-role="th">D1N</th>
<th data-quarto-table-cell-role="th">D2C</th>
<th data-quarto-table-cell-role="th">D2N</th>
<th data-quarto-table-cell-role="th">D3C</th>
<th data-quarto-table-cell-role="th">D3N</th>
<th data-quarto-table-cell-role="th">D4C</th>
<th data-quarto-table-cell-role="th">D4N</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>Nível Territorial (Código)</td>
<td>Nível Territorial</td>
<td>Unidade de Medida (Código)</td>
<td>Unidade de Medida</td>
<td>Valor</td>
<td>Brasil (Código)</td>
<td>Brasil</td>
<td>Trimestre (Código)</td>
<td>Trimestre</td>
<td>Setores e subsetores (Código)</td>
<td>Setores e subsetores</td>
<td>Variável (Código)</td>
<td>Variável</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>99.42</td>
<td>1</td>
<td>Brasil</td>
<td>199601</td>
<td>1º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>100.65</td>
<td>1</td>
<td>Brasil</td>
<td>199602</td>
<td>2º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>104.16</td>
<td>1</td>
<td>Brasil</td>
<td>199603</td>
<td>3º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>103.38</td>
<td>1</td>
<td>Brasil</td>
<td>199604</td>
<td>4º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<div id="7cd37adb" class="cell" data-execution_count="3">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Substitui as colunas pela primeira observação</span></span>
<span id="cb3-2">pib_sa_raw.columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pib_sa_raw.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retira a primeira observação</span></span>
<span id="cb3-5">pib_sa_raw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pib_sa_raw.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:, :]</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Altera para float a coluna do valor</span></span>
<span id="cb3-8">pib_sa_raw[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Valor'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pib_sa_raw[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Valor'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>)</span>
<span id="cb3-9">pib_sa_raw.head()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display" data-execution_count="3">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">Nível Territorial (Código)</th>
<th data-quarto-table-cell-role="th">Nível Territorial</th>
<th data-quarto-table-cell-role="th">Unidade de Medida (Código)</th>
<th data-quarto-table-cell-role="th">Unidade de Medida</th>
<th data-quarto-table-cell-role="th">Valor</th>
<th data-quarto-table-cell-role="th">Brasil (Código)</th>
<th data-quarto-table-cell-role="th">Brasil</th>
<th data-quarto-table-cell-role="th">Trimestre (Código)</th>
<th data-quarto-table-cell-role="th">Trimestre</th>
<th data-quarto-table-cell-role="th">Setores e subsetores (Código)</th>
<th data-quarto-table-cell-role="th">Setores e subsetores</th>
<th data-quarto-table-cell-role="th">Variável (Código)</th>
<th data-quarto-table-cell-role="th">Variável</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">1</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>99.42</td>
<td>1</td>
<td>Brasil</td>
<td>199601</td>
<td>1º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">2</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>100.65</td>
<td>1</td>
<td>Brasil</td>
<td>199602</td>
<td>2º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">3</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>104.16</td>
<td>1</td>
<td>Brasil</td>
<td>199603</td>
<td>3º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">4</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>103.38</td>
<td>1</td>
<td>Brasil</td>
<td>199604</td>
<td>4º trimestre 1996</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">5</td>
<td>1</td>
<td>Brasil</td>
<td>30</td>
<td>Número-índice</td>
<td>104.41</td>
<td>1</td>
<td>Brasil</td>
<td>199701</td>
<td>1º trimestre 1997</td>
<td>90707</td>
<td>PIB a preços de mercado</td>
<td>584</td>
<td>Série encadeada do índice de volume trimestral...</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>sidrapy</category>
  <category>Python</category>
  <guid>https://welli45.github.io/portifolio-dados.github.io/projetos-Python/posts/projeto-sidrapy.html</guid>
  <pubDate>Mon, 12 Feb 2024 03:00:00 GMT</pubDate>
</item>
</channel>
</rss>
